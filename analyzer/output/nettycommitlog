commit 740c68faed4b6c5b5f7b5daec195cf5fc5926d70
Author: Norman Maurer <norman_maurer@apple.com>
Date:   Sun Oct 22 13:23:06 2017 +0200

    Add supresswarnings to cleanup 16b1dbdf9244f831aa0cd92d5531d8cb61010b07.
    
    Motivation:
    
    We should add @SupressWarnings
    
    Modifications:
    
    Add annotations.
    
    Result:
    
    Less warnings

commit 6e859469ca49f2029ad68f1d32e5b8bfa054eeba
Author: Norman Maurer <norman_maurer@apple.com>
Date:   Tue Aug 22 11:14:30 2017 +0200

    Deprecate ApplicationProtocolNegotiator and its implementation as people should use ApplicationProtocolConfig
    
    Motivation:
    
    We should deprecate ApplicationProtocolNegotiator as the users should use ApplicationProtocolConfig these days.
    
    Modifications:
    
    Add deprecation annotations and javadocs.
    
    Result:
    
    Be able to make package-private in next major release.

commit 91b62da8c150b6202acd812772479856ab4c3dad
Author: Norman Maurer <norman_maurer@apple.com>
Date:   Thu Jun 29 13:18:27 2017 +0200

    Remove @deprecation keyword on AbstractUnsafe.ensureOpen(...)
    
    Motivation:
    
    e84567004324c0bfd04b0ca9e1e182ed89394b16 marked AbstractUnsafe.ensureOpen(...) as deprecated for no reason.
    
    Modifications:
    
    Remove `@deprecation`
    
    Result:
    
    Remove incorrect annotation

commit 0ee36fef006dc47e0f3d88bfd0ff8eda27dc7651
Author: chhsiao90 <chhsiao90@gmail.com>
Date:   Sun Mar 5 23:22:54 2017 +0800

    Accept two ways to start HTTP/2 over clear text
    
    Motivation:
    
    HTTP/2 support two ways to start on a no-tls tcp connection,
    http/1.1 upgrade and prior knowlege methodology to start HTTP/2.
    Currently, the http2-server from example only support
    starting by upgrade. I think we can do a simple dispatch by peek first
    bytes from inbound that match to prior knowledge preface or not and
    determine which handlers to set into pipeline.
    
    Modifications:
    
    Add ClearTextHttp2ServerUpgradeHandler to support start HTTP/2 via clear
    text with two approach. And update example/http2-server to support
    this functionality.
    
    Result:
    
    netty HTTP/2 and the example http2-server accept for two ways to start
    HTTP/2 over clear text.
    
    Fixed memory leak problem
    
    Update fields to final
    
    Rename ClearText to cleartext
    
    Addressed comments for code improvement
    
    - Always prefer static, final, and private if possible
    - Add UnstableApi annotation
    - Used EmbeddedChannel.readInbound instead of unhandled inbound handler
    - More assertion
    
    Update javadoc for CleartextHttp2ServerUpgradeHandler
    
    Rename ClearTextHttp2ServerUpgradeHandler to CleartextHttp2ServerUpgradeHandler
    
    Removed redundant code about configure pipeline
    
    nit: PriorKnowledgeHandler
    
    Removed Mockito.spy, investigate conn state instead
    
    Add Http2UpgradeEvent
    
    Check null of the constructor arguments
    
    Rename Http2UpgradeEvent to PriorKnowledgeUpgradeEvent
    
    Update unit test

commit 2902ca122a57d1540a639382f202dc2a09f07069
Author: Norman Maurer <norman_maurer@apple.com>
Date:   Wed Mar 1 21:06:56 2017 +0100

    Remove annotation from package-info.java as IDEA not like it, cleanup of 4734ef61a57b15df3e313b071956218fde98da2c

commit d8596d2d9065002072235d81dbb70fe1a9bcf3b3
Author: Norman Maurer <norman_maurer@apple.com>
Date:   Mon Feb 13 15:10:38 2017 +0100

    Two tests are missing `@Test` annotations
    
    Motivation:
    
    ReadOnlyByteBufTest contains two tests which are missing the `@Test` annotation and so will never run.
    
    Modifications:
    
    Add missing annotation.
    
    Result:
    
    Tests run as expected.

commit b91dd0678d290a70817ddc44bb5ced2baed275fd
Author: Scott Mitchell <scott_mitchell@apple.com>
Date:   Thu Feb 9 09:27:24 2017 -0800

    Resolver package is unstable
    
    Motivation:
    The resolver package had some changes late in the 4.1.CR phase and the intention was to mark this package as unstable until these interfaces solidify, but we forgot to mark the package and public classes with the unstable annotation.
    
    Modifications:
    - resolver package public interfaces and package-info should be annotated with @UnstableApi
    
    Result:
    The unstable nature of the resolver package is more clearly communicated.

commit c13908adb5a90869338dece42b893e373acc364d
Author: Dmitriy Dumanskiy <doom369@gmail.com>
Date:   Wed Aug 3 23:28:44 2016 +0300

    deprecated old loggers
    
    Motivation:
    
    Commons logger is dead and not updated for more than 2 years. #5615.
    
    Modifications:
    
    Added @Deprecated annotation to CommonsLoggerFactory and CommonsLogger.
    
    Result:
    
    Commons logger now deprecated.

commit b83ffcc4471ce5cc68b39fc3545853ac5e2a5f1b
Author: Norman Maurer <norman_maurer@apple.com>
Date:   Tue May 17 18:23:29 2016 +0200

    Add timeout to PooledByteBufAllocatorTest
    
    Motivation:
    
    Some tests in PooledByteBufAllocatorTest are blocking on a CountDownLatch. We should use a timeout on these tests so these will not block forever on a failure.
    
    Modifications:
    
    Add timeout param to @Test annotation
    
    Result:
    
    Have sane timeouts on tests.

commit 4b24b0aac88636ad448bde9dfc204259619b2085
Author: Norman Maurer <norman_maurer@apple.com>
Date:   Tue May 10 09:24:44 2016 +0200

    Annotate Http2ServerDowngrader with @UnstableApi
    
    Motivation:
    
    Everything in the http2 package should be considered unstable for now
    
    Modifications:
    
    Add missing annotation on Http2ServerDowngrader
    
    Result:
    
    Clearly mark class as unstable.

commit 9229ed98e2eb3159abe3195459e0ffc78200d358
Author: Norman Maurer <norman_maurer@apple.com>
Date:   Tue Apr 12 14:22:41 2016 +0200

    [#5088] Add annotation which marks packages/interfaces/classes as unstable
    
    Motivation:
    
    Some codecs should be considered unstable as these are relative new. For this purpose we should introduce an annotation which these codecs should us to be marked as unstable in terms of API.
    
    Modifications:
    
    - Add UnstableApi annotation and use it on codecs that are not stable
    - Move http2.hpack to http2.internal.hpack as it is internal.
    
    Result:
    
    Better document unstable APIs.

commit 4a18bcaa5926b717d0fc1a50b2aede4fda946697
Author: Norman Maurer <norman_maurer@apple.com>
Date:   Fri Apr 1 11:46:33 2016 +0200

    [#5062] Mark MqttEncoder @Sharable
    
    Motivation:
    
    Commit 2696778 changed MqttEncoder to be a singelton but missed to add @Sharable annotation. This broke the encoder as it can not be added to multiple pipelines.
    
    Modifications:
    
    Add @Sharable annotation
    
    Result:
    
    MqttEncoder can be used in multiple pipelines again.

commit a11412fab025d4963f0bab6589314ae1103db19a
Author: Norman Maurer <norman_maurer@apple.com>
Date:   Tue Mar 22 14:42:11 2016 +0100

    Cleanup transport-native-epoll code.
    
    Motivation:
    
    The code of transport-native-epoll missed some things in terms of static keywords, @deprecated annotations and other minor things.
    
    Modifications:
    
    - Add missing @deprecated annotation
    - Not using FQCN in javadocs
    - Add static keyword where possible
    - Use final fields when possible
    - Remove throws IOException from method where it is not needed.
    
    Result:
    
    Cleaner code.

commit a2732c6542d24cb28ee32f612f7c97c9d2216a54
Author: Norman Maurer <norman_maurer@apple.com>
Date:   Tue Jan 26 15:03:59 2016 +0100

    [#4755] Make WebSocketClientCompressionHandler @Sharable
    
    Motivation:
    
    WebSocketClientCompressionHandler is stateless so it should be @Sharable.
    
    Modifications:
    
    Add @Sharable annotation to WebSocketClientCompressionHandler, make constructor private and add static field to get the instance.
    
    Result:
    
    Less object creation.

commit 41e03adf249ee9d23938fecf9be980a096710b36
Author: Norman Maurer <norman_maurer@apple.com>
Date:   Wed Nov 11 10:32:03 2015 -0800

    Mark ChannelHandler.exceptionCaught(...) as deprected.
    
    Motivation:
    
    exceptionCaught(...) will only handle inbound exceptions which means it makes not much sense to have it also on ChannelOutboundHandler. Because of this we should move it to ChannelInboundHandler.
    
    Modifications:
    
    Add @deprecated annotation to ChannelHandler.exceptionCaught(...).
    
    Result:
    
    Preapre to cleanup the API in later release.

commit e121c68e0fb633b1fceca24ad0f5b04d14879990
Author: Sverker Abrahamsson <sverker@limetransit.com>
Date:   Sat May 23 01:34:21 2015 +0200

    Created RTSPEncoder and RTSPDecoder which are now common for both requests and responses to be able to handle both types of messages on the same channel.
    
    Keep RTSPRequestEncoder, RTSPRequestDecoder, RTSPResponseEncoder and
    RTSPResponseDecoder for backwards compatibility but they now just extends
    the generic encoder/decoder and are markes as deprecated.
    
    Renamed the decoder test, because the decoder is now generic. Added
    testcase for when ANNOUNCE request is received from server.
    
    Created testcases for encoder.
    
    Mark abstract base classes RTSPObjectEncoder and RTSPObjectDecoder as
    deprecated, that functionality is now in RTSPEncoder and RTSPDecoder.
    
    Added annotation in RtspHeaders to suppress warnings about deprecation, no need when
    whole class is deprecated.

commit f89dfb0bd53af45eb5f1c1dcc7d9badd889d17f0
Author: Scott Mitchell <scott_mitchell@apple.com>
Date:   Wed Sep 2 15:10:58 2015 -0700

    Deprecation cleanup for HTTP headers
    
    Motivaion:
    The HttpHeaders and DefaultHttpHeaders have methods deprecated due to being removed in future releases, but no replacement method to use in the current release. The deprecation policy should not be so aggressive as to not provide any non-deprecated method to use.
    
    Modifications:
    - Remove deprecated annotations and javadocs from methods which are the best we can do in terms of matching the master's api for 4.1
    
    Result:
    There should be non-deprecated methods available for HttpHeaders in 4.1.

commit e1bf9d625762a474fbfa9fbe8dc1ca55cff6074a
Author: Trustin Lee <t@motd.kr>
Date:   Sat Aug 29 11:34:52 2015 +0900

    Fix unintended timeout in negative DNS lookup cache test
    
    Motivation:
    
    DNS lookups in DnsNameResolverTest can take longer than expected due to
    retries. The hard limit of 5 seconds is being applied to
    testNegativeTtl(), making the first uncached lookup cause a timeout.
    
    Modifications:
    
    Do not use JUnit's Timeout annotation but implement simple timeout
    mechanism that apples only to cached lookups.
    
    Result:
    
    testNegativeTtl() should not fail when an initial negative lookup
    requires a retry.

commit f3fb77f4bce9d11d7b54878e91728674f6ee5342
Author: Louis Ryan <lryan@google.com>
Date:   Mon Apr 13 15:45:48 2015 -0700

    Have microbenchmarks produce a deployable artifact. Fix some minor miscellaneous issues.
    
    Motivation:
    Allows for running benchmarks from built jars which is useful in development environments that only take released artifacts.
    
    Modifications:
    Move benchmarks into 'main' from 'test'
    Add @State annotations to benchmarks that are missing them
    Fix timing issue grabbing context during channel initialization
    
    Result:
    Users can run benchmarks more easily.

commit bd8a5bc9b3db224c446e0c05fa127ba7022db942
Author: Trustin Lee <t@motd.kr>
Date:   Thu Dec 4 20:52:55 2014 +0900

    Add missing @Override annotation

commit a37c4ad7f4578f725831f4f989fa82f389e6bfc7
Author: Sam Young <sayo@amazon.com>
Date:   Mon Nov 24 09:51:14 2014 -0800

    Add @SafeVarargs to PromiseAggregator#add and PromiseNotifier#(...) https://github.com/netty/netty/issues/3147
    
    Motivation:
    
    8fbc513 introduced stray warnings in callsites of
    PromiseAggregator#add and PromiseNotifier#(...).
    
    Modifications:
    
    This commit adds the @SafeVarargs annotation to PromiseAggregator#add
    and PromiseNotifier#(...). As Netty is built with JDK7, this is a
    recognized annotation and should not affect runtime VM versions 1.5 and
    1.6.
    
    Result:
    
    Building Netty with JDK7 will no longer produce warnings in the
    callsites mentioned above.

commit fbf853375982acdddf5be676b1c647182b2d210c
Author: Norman Maurer <nmaurer@redhat.com>
Date:   Sat Aug 23 21:01:23 2014 +0200

    [#2812] Ensure we call checkForSharableAnnotation in all constructors of ByteToMessageCodec
    
    Motivation:
    
    ByteToMessageCodec miss to check for @Sharable annotation in one of its constructors.
    
    Modifications:
    
    Ensure we call checkForSharableAnnotation in all constructors.
    
    Result:
    
    After your change, what will change.

commit 0fceef8ab675570a06d6d74c0e39185e6466f44f
Author: Trustin Lee <t@motd.kr>
Date:   Fri Apr 25 16:40:42 2014 +0900

    Undeprecate deregister() and chanelUnregistered()
    
    Motivation:
    
    As discussed in #2250, it will become much less complicated to implement
    deregistration and reregistration of a channel once #2250 is resolved.
    Therefore, there's no need to deprecate deregister() and
    channelUnregistered().
    
    Modification:
    
    - Undeprecate deregister() and channelUnregistered()
    - Remove SuppressWarnings annotations where applicable
    
    Result:
    
    We (including @jakobbuchgraber) are now ready to play with #2250 at
    master

commit 7dc63ccd95f362a17c777765c08df7d45114169f
Author: Trustin Lee <t@motd.kr>
Date:   Mon Mar 24 12:32:55 2014 +0900

    Add EventExecutor.children() in favor of iterator()
    
    Motivation:
    
    EventExecutor.iterator() is fixed to return Iterator<EventExecutor> and there's no way to change that as long as we don't extend Iterable.  However, a user should have a way to cast the returned set of executors painlessly.  Currently, it is only possible with an explicit cast like (Iterator<NioEventLoop>).
    
    Modifications:
    
    Instead, I added a new method called 'children()' which returns an immutable collection of child executors whose method signature looks like the following:
    
        <E extends EventExecutor> Set<E> children();
    
    Result:
    
    A user can now do this:
    
        Set<NioEventLoop> loops = group.children();
        for (NioEventLoop l: loops) { ... }
    
    Unfortunately, this is not possible:
    
        for (NioEventLoop l: group.children()) { ... }
    
    However, it's still a gain that a user doesn't need to down-cast explicitly and to add the '@SuppressWarnings` annotation.

commit adcc2d4b4b325d5b405c614a14cd659084cb9cbc
Author: Norman Maurer <nmaurer@redhat.com>
Date:   Mon Mar 10 11:23:56 2014 +0100

    Remove condition in ChannelHandlerAdapter.isSharable() by caching the result of the annotation lookup.
    
    Motivation:
    Remove the synchronization bottleneck and so speed up things
    
    Modifications:
    Introduce a ThreadLocal cache that holds mappings between classes of ChannelHandlerAdapater implementations and the result of checking if the @Sharable annotation is present.
    This way we only will need to do the real check one time and server the other calls via the cache. A ThreadLocal and WeakHashMap combo is used to implement the cache
    as this way we can minimize the conditions while still be sure we not leak class instances in containers.
    
    Result:
    Less conditions during adding ChannelHandlerAdapter to the ChannelPipeline

commit 0f76b3c357fbb3500a9f0742e9369139b3283ceb
Author: Trustin Lee <t@motd.kr>
Date:   Tue Dec 17 00:17:35 2013 +0900

    Remove unnecessary code from HttpObjectDecoder and re-enable all HTTP tests
    
    - Since Netty 4, HTTP decoder does not generate a full message at all.  Therefore, there's no need to keep separate states for the content smaller than maxChunkSize.
    - maxChunkSize must be greater than 0. Setting it to 0 should not disable chunked encoding. We have a dedicated flag for that.
    - Uncommented the tests that were commented out for an unknown reason, with some fixes.
    - Added more tests for HTTP decoder.
    - Removed the Ignore annotation on some tests.

commit efd08efd1b9a45189994c50792076655bb42dbc8
Author: Norman Maurer <nmaurer@redhat.com>
Date:   Mon Jul 15 08:18:57 2013 +0200

    Add missing @Override annotations

commit 8842f8ef9047a2f224f8bc2be4b2898aec6d4274
Author: Trustin Lee <trustin@gmail.com>
Date:   Fri Nov 9 17:34:34 2012 +0900

    Add missing @Override annotation

commit 5a9d6e59c19308d1f9f9e6c78651d399caaa1fee
Author: Trustin Lee <trustin@gmail.com>
Date:   Sat Sep 1 17:03:37 2012 +0900

    Remove unnecessary annotation

commit c565b59fe34531ee5fa84a213a5ca87624968569
Author: Trustin Lee <trustin@gmail.com>
Date:   Tue Aug 28 16:25:01 2012 +0900

    Remove a unnecessary annotation

commit 5243d3d0f0e09977397478fc6e9551661e05e4cb
Author: Trustin Lee <trustin@gmail.com>
Date:   Thu May 31 17:05:34 2012 -0700

    Add @Sharable annotation to ChannelInitializer

commit 7ddc93bed87f6b1efb062df480566ff590a8b34e
Author: Trustin Lee <trustin@gmail.com>
Date:   Thu May 31 14:54:48 2012 -0700

    Ported IdleStateHandler / Forward-ported the UptimeClient example
    
    - Add ChannelHandlerContext.eventLoop() for convenience
    - Bootstrap and ServerBootstrap handles channel initialization failure
      better
    - More strict checks for missing @Sharable annotation
      - A handler without @Sharable annotation cannot be added more than
        once now.

commit f8f703e67948919a61157bbdb94d2a9842893abb
Author: norman <norman@apache.org>
Date:   Fri May 4 10:28:57 2012 +0200

    Add @Override annotations

commit 7016b83629ac8ad734b896e4ee34c44cd4dc3788
Author: norman <norman@apache.org>
Date:   Fri May 4 10:28:57 2012 +0200

    Add @Override annotations

commit e76e2aeac80d883383ec672e628fac10c85947cc
Author: Trustin Lee <trustin@gmail.com>
Date:   Sun Apr 29 17:59:42 2012 +0900

    Add missing @Override annotation

commit f84a9e1c52d72df240975ab0a9832c14d69eb458
Author: Craig P. Motlin <cmotlin@gmail.com>
Date:   Wed Nov 9 20:41:11 2011 -0500

    Add missing @Override annotations.

commit e1869db9130ec7b28074ae7ac70c2f256ca8ad03
Author: Trustin Lee <trustin@gmail.com>
Date:   Tue May 3 11:05:06 2011 +0900

    Fixed various compiler warnings
    
    * Missing @Override annotations
    * Indirect access to a private member from inner classes
    * Incorrect @see javadoc tags (should not use the @link tag)
    * ..

commit 420431cabb7fc4cb80c8c44bd65e490b19afcae7
Author: Trustin Lee <trustin@gmail.com>
Date:   Mon Feb 7 20:03:40 2011 +0900

    Added missing @Overrides annotations

commit 0dbdbcdb968dadb5f009f93de945b0aeb539b6d9
Author: Trustin Lee <trustin@gmail.com>
Date:   Fri Nov 12 09:45:39 2010 +0900

    Added @Override annotations which were disallowed in Java 5 but not anymore in Java 6.

commit 605d2969d2b803f2a94b9a31dadbaaac4cf49980
Author: Trustin Lee <trustin@gmail.com>
Date:   Thu Mar 4 06:34:00 2010 +0000

    Added @Deprecated annotation to the implementations of deprecated methods in ChannelBuffer (basically to silence nagging compiler)

commit 4a3495b1c829b8bd0af9a1c7f07048512fc2a473
Author: Trustin Lee <trustin@gmail.com>
Date:   Tue Feb 2 00:38:07 2010 +0000

    * Added @Sharable annotation which replaces @ChannelPipelineCoverage
    * Removed annotations from the examples because it's not essential part of learning the framework - User guide will explain about it later

commit 1f2d65ce54b52b5da78bae70768732592cf994d3
Author: Trustin Lee <trustin@gmail.com>
Date:   Wed Nov 11 04:22:28 2009 +0000

    Added missing annotation

commit 959e72a6b04aef3818fbb37e629a3c51a40c9277
Author: Trustin Lee <trustin@gmail.com>
Date:   Tue Jun 30 01:16:54 2009 +0000

    Removed unnecessary SuppressWarnings annotations

commit f92a0fe53795310d3cce770192c7fa167a416fce
Author: Trustin Lee <trustin@gmail.com>
Date:   Wed May 20 09:03:17 2009 +0000

    Fixed some warnings revealed by Eclipse 3.5 RC1 - previous Eclipse versions might complain this annotation is unnecessary.

commit 04af4356efa0854af66df68494b6560589e680ff
Author: Trustin Lee <trustin@gmail.com>
Date:   Mon Jan 12 10:40:17 2009 +0000

    Removed unnecessary annotation implementations

commit 184c7cbd5d3ff8451cdbbfeb0213fc637c05f20e
Author: Trustin Lee <trustin@gmail.com>
Date:   Thu Jan 8 13:38:45 2009 +0000

    ChannelFactoryResource annotation is documented to help a user figure out how it is used

commit d1838f4af799190ae45d79db8f8d7d086515f137
Author: Trustin Lee <trustin@gmail.com>
Date:   Wed Jan 7 04:06:17 2009 +0000

    Added ChannelPipelineCoverage annotation to LengthFieldPretender

